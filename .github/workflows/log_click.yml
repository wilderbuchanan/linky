name: Log Click Event

on:
  repository_dispatch:
    types:
      - log_click

jobs:
  log_click:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Debug the contents of the log file
      - name: Debug Log File
        run: |
          echo "Checking content of click_log.json:"
          if [ -f click_log.json ]; then
            cat click_log.json
          else
            echo "File not found. Initializing click_log.json."
            echo "[]" > click_log.json
          fi

      # Step 3: Ensure the log file is valid JSON
      - name: Validate Log File
        run: |
          if ! jq empty click_log.json > /dev/null 2>&1; then
            echo "Invalid JSON detected in click_log.json. Reinitializing."
            echo "[]" > click_log.json
          fi

      # Step 4: Debug the incoming client_payload
      - name: Debug Client Payload
        run: echo '${{ toJson(github.event.client_payload) }}'

      # Step 5: Append the new event data to the log file
      - name: Append Click Event to Log
        run: |
          echo '${{ toJson(github.event.client_payload) }}' | \
          jq '. as $newEvent | $existing + [$newEvent]' --slurpfile existing click_log.json | jq 'flatten(1)' > temp.json
          mv temp.json click_log.json

      # Step 6: Commit and push changes back to the repository
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add click_log.json
          git commit -m "Log click event"
          git push origin HEAD
